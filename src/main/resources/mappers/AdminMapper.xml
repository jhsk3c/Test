<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-/mybatis.org/DTO Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">

	<cache />
	
	<sql id="basecolumn"> <!-- 일반회원의 컬럼들 -->
		mem_num, mem_id, mem_pw, mem_name, mem_birth, mem_sex, mem_nationality,  mem_email, mem_addr, mem_tel, mem_prefer_trip, mem_date, mem_lev
	</sql>
	
	<resultMap type="memDTO" id="baseMember"> <!-- 일반회원의 Map -->
		<id column="MEM_NUM" jdbcType="VARCHAR" property="memNum" />
		<result column="MEM_ID" jdbcType="VARCHAR" property="memId" />		
		<result column="MEM_PW" jdbcType="VARCHAR" property="memPw"/>		
		<result column="MEM_NAME" jdbcType="VARCHAR" property="memName" />
		<result column="MEM_BIRTH" jdbcType="TIMESTAMP" property="memBirth" />		
		<result column="MEM_SEX" jdbcType="VARCHAR" property="memSex" />
		<result column="MEM_NATIONALITY" jdbcType="VARCHAR" property="memNationality" />
		<result column="MEM_EMAIL" jdbcType="VARCHAR" property="memEmail" />
		<result column="MEM_ADDR" jdbcType="VARCHAR" property="memAddr" />
		<result column="MEM_TEL" jdbcType="TIMESTAMP" property="memTel" />	
		<result column="MEM_PREFER_TRIP" jdbcType="VARCHAR" property="memPreferTrip" />
		<result column="MEM_DATE" jdbcType="TIMESTAMP" property="memDate" />
		<result column="MEM_LEV" jdbcType="INTEGER" property="memLev" />
	</resultMap>	

	
	<sql id="combasecolumn"> <!-- 기업회원의 컬럼들 -->
		com_num, com_id, com_pw, com_rep_name, license_number, com_name, com_addr, contact_phone_num, contact_email, com_approval, approval_date, com_date, com_lev
	</sql>
	
	
	<resultMap type="comDTO" id="baseComMember"> <!-- 기업회원의 Map -->
		<id column="COM_NUM" jdbcType="VARCHAR" property="comNum" />
		<result column="COM_ID" jdbcType="VARCHAR" property="comId" />		
		<result column="COM_PW" jdbcType="VARCHAR" property="comPw"/>		
		<result column="COM_REP_NAME" jdbcType="VARCHAR" property="comRepName" />
		<result column="LICENSE_NUMBER" jdbcType="TIMESTAMP" property="licenseNumber" />		
		<result column="COM_NAME" jdbcType="VARCHAR" property="comName" />
		<result column="COM_ADDR" jdbcType="VARCHAR" property="comAddr" />
		<result column="CONTACT_PHONE_NUM" jdbcType="VARCHAR" property="contactPhoneNum" />	
		<result column="CONTACT_EMAIL" jdbcType="VARCHAR" property="contactEmail" />
		<result column="COM_APPROVAL" jdbcType="VARCHAR" property="comApproval" />
		<result column="APPROVAL_DATE" jdbcType="TIMESTAMP" property="approvalDate" />	
		<result column="COM_DATE" jdbcType="TIMESTAMP" property="comDate" />
		<result column="COM_LEV" jdbcType="INTEGER" property="comLev" />
	</resultMap>
	
	<sql id="vspotbasecolumn"> <!-- 휴양지 등록의 컬럼들 -->
		vspot_num, mem_num, mem_id, vspot_title, vspot_name, vspot_original, vspot_store, vspot_location, vspot_locationMap, vspot_loc, vspot_introduce, vspot_feature, vspot_approval, approval_date, vspot_date
	</sql>
	
	<resultMap type="vDTO" id="baseVspotMember"> <!-- 휴양지 등록 Map -->
		<id column="VSPOT_NUM" jdbcType="INTEGER" property="vspotNum" />
		<result column="MEM_NUM" jdbcType="VARCHAR" property="memNum" />
		<result column="MEM_ID" jdbcType="VARCHAR" property="memId" />
		<result column="VSPOT_TITLE" jdbcType="VARCHAR" property="vspotTitle" />			
		<result column="VSPOT_NAME" jdbcType="VARCHAR" property="vspotName"/>		
		<result column="VSPOT_ORIGINAL" jdbcType="VARCHAR" property="vspotOriginal" />
		<result column="VSPOT_STORE" jdbcType="VARCHAR" property="vspotStore" />		
		<result column="VSPOT_LOCATION" jdbcType="VARCHAR" property="vspotLocation" />
		<result column="VSPOT_LOCATIONMAP" jdbcType="VARCHAR" property="vspotLocationMap" />
		<result column="VSPOT_LOC" jdbcType="VARCHAR" property="vspotLoc" />
		<result column="VSPOT_INTRODUCE" jdbcType="VARCHAR" property="vspotIntroduce" />
		<result column="VSPOT_FEATURE" jdbcType="VARCHAR" property="vspotFeature" />	
		<result column="VSPOT_APPROVAL" jdbcType="VARCHAR" property="vspotApproval" />
		<result column="APPROVAL_DATE" jdbcType="TIMESTAMP" property="approvalDate" />
		<result column="VSPOT_DATE" jdbcType="TIMESTAMP" property="vspotDate" />	
	</resultMap>
	
	<!-- 활동 등록 컬럼  -->
	<resultMap type="actiDTO" id="baseActivity">
		<id column="activity_num" jdbcType="VARCHAR" property="activityNum"/>
		<result column="product_num" jdbcType="VARCHAR" property="productNum"/>
		<result column="store_num" jdbcType = "VARCHAR" property="storeNum"/>
		<result column="mem_num" jdbcType="VARCHAR" property="memNum"/>
		<result column="activity_lev" jdbcType="INTEGER" property="activityLev"/>
		<result column="activity_name" jdbcType="VARCHAR" property="activityName"/>		
		<result column="activity_start_date" jdbcType="TIMESTAMP" property="activityStartDate"/>
		<result column="activity_end_date" jdbcType="TIMESTAMP" property="activityEndDate"/>
		<result column="recruit_start_date" jdbcType="TIMESTAMP" property="recruitStartDate"/>
		<result column="recruit_end_date" jdbcType="TIMESTAMP" property="recruitEndDate"/>		
		<result column="recruit_People" jdbcType="INTEGER" property="recruitPeople"/>
		<result column="activity_Current_People" jdbcType="INTEGER" property="activityCurrentPeople"/>
		<result column="activity_Product" jdbcType="VARCHAR" property="activityProduct"/>
		<result column="activity_state" jdbcType="VARCHAR" property="actiState"/>
		<result column="activity_text" jdbcType="VARCHAR" property="activityText"/>
		<result column="limit_age" jdbcType="VARCHAR" property="limitAge" />
		<result column="acivity_cost" jdbcType="INTEGER" property="activityCost" />
		<result column="original_filename" jdbcType="VARCHAR" property="originalFilename" />
		<result column="store_filename" jdbcType="VARCHAR" property="storeFilename" />
		<result column="sort_of_activity" jdbcType="VARCHAR" property="sortOfActivity" />
		<result column="which_product" jdbcType="VARCHAR" property="whichProduct" />
		<result column="activity_city" jdbcType="VARCHAR" property="activityCity" />
	</resultMap>
	
	<sql id="shopbasecolumn"> <!-- 상점 등록 컬럼 -->
		shop_num, vspot_num, mem_id, shop_category, shop_loc, shop_location, shop_locationMap, shop_name, goods_original, goods_store, GOODS_CONTEXT, GOODS_INTRO, shop_approval, shop_closed, shop_count, shop_time1, shop_time2, goods_date
	</sql>
	
	<resultMap type="shopDTO" id="shopbase"> <!-- 상점 등록 Map -->
		<id column="SHOP_NUM" jdbcType="INTEGER" property="shopNum" />
		<result column="VSPOT_NUM" jdbcType="INTEGER" property="vspotNum" />
		<result column="MEM_ID" jdbcType="VARCHAR" property="memId" />
		<result column="SHOP_CATEGORY" jdbcType="VARCHAR" property="shopCategory" />
		<result column="SHOP_LOC" jdbcType="VARCHAR" property="shopLoc" />			
		<result column="SHOP_LOCATION" jdbcType="VARCHAR" property="shopLocation"/>		
		<result column="SHOP_LOCATIONMAP" jdbcType="VARCHAR" property="shopLocationMap" />
		<result column="SHOP_NAME" jdbcType="VARCHAR" property="shopName" />		
		<result column="GOODS_ORIGINAL" jdbcType="VARCHAR" property="goodsOriginal" />
		<result column="GOODS_STORE" jdbcType="VARCHAR" property="goodsStore" />
		<result column="GOODS_CONTEXT" jdbcType="VARCHAR" property="goodsContext" />
		<result column="GOODS_INTRO" jdbcType="VARCHAR" property="goodsIntro" />
		<result column="SHOP_APPROVAL" jdbcType="VARCHAR" property="shopApproval" />
		<result column="SHOP_CLOSED" jdbcType="VARCHAR" property="shopClosed" />
		<result column="SHOP_COUNT" jdbcType="INTEGER" property="shopCount" />
		<result column="SHOP_TIME1" jdbcType="VARCHAR" property="shopTime1" />	
		<result column="SHOP_TIME2" jdbcType="VARCHAR" property="shopTime2" />	
		<result column="GOODS_DATE" jdbcType="TIMESTAMP" property="goodsDate" />	
	</resultMap>
	


	<sql id="baseclumnOfActivity">
		activity_num,  mem_num, activity_name, activity_lev, activity_start_date, activity_end_date, 
			recruit_start_date, recruit_end_date, recruit_people, activity_text, 
			limit_age, original_filename, store_filename, activity_Product, acivity_cost, sort_of_activity, which_product, activity_city
	</sql>

	
<!-- 활동 상점 -->
	<resultMap type="StoreDTO" id="baseStore">
		<id column="store_num" jdbcType="VARCHAR" property="storeNum" />
		<result column="store_loc1" jdbcType="VARCHAR" property="storeLoc1" />
		<result column="store_name" jdbcType="VARCHAR" property="storeName" />
		<result column="store_loc2" jdbcType="VARCHAR" property="storeLoc2" />
		<result column="store_tel" jdbcType="VARCHAR" property="storeTel" />
		<result column="Store_MainProduct" jdbcType="VARCHAR" property="StoreMainProduct" />
		<result column="store_business_num" jdbcType="VARCHAR" property="storeBusinessNum" />
		<result column="store_Owner" jdbcType="VARCHAR" property="storeOwner" />
	</resultMap>
	
	<!-- 활동 상점 등록 -->
	<sql id="actiStore">
			store_num, store_name, store_loc1, store_loc2, store_tel, Store_MainProduct,
			store_business_num, store_Owner, original_Store_filename, store_Store_filename, 
			original_bL_filename, store_BL_filename, registration_date
	</sql>
	<sql id="actiStoreList">
		store_num, store_loc1, store_name
	</sql>
		
	<!-- 물품 -->
	<resultMap type="ProductDTO" id="baseProduct">
		<id column="product_num" jdbcType="VARCHAR" property="productNum" />
		<result column="store_num" jdbcType="VARCHAR" property="storeNum" />
		<result column="product_name" jdbcType="VARCHAR" property="productName" />
		<result column="product_price" jdbcType="INTEGER" property="productPrice" />
		<result column="product_option" jdbcType="VARCHAR" property="productOption" />
		<result column="product_content" jdbcType="VARCHAR" property="productContent" />
		<result column="original_filename" jdbcType="VARCHAR" property="originalFilename" />
		<result column="store_filename" jdbcType="VARCHAR" property="storeFilename" />
	</resultMap>
	
	<!-- 활동 물품 등록 -->
	<sql id="actiProduct">
		product_num, store_num, product_name, product_price, product_option, product_content, original_filename, store_filename 
	</sql>








<!-- sql -->
	<!-- 승인 미승인 처리를 기다리는 기업회원의 리스트 항목  -->
	<select id="comList" parameterType="spageDTO" resultMap="baseComMember">
	
		select rownum rn, <include refid="combasecolumn" />
		from(select rownum rn, <include refid="combasecolumn" />
			from(select <include refid="combasecolumn" />
				from company_member order by COM_DATE desc))
		where com_lev = ${su1} and rn &gt;= #{startRow} and rn &lt;= #{endRow}
		
	</select>
	
	<!-- 승인 미승인 처리를 기다리는 기업회원의 수 -->
	<select id="listCount" parameterType="String" resultType="int">
		select count(*)
		from company_member
		where com_lev = ${comLev}
	</select>
	
	<!-- 리스트에서 승인을 클릭하면 레벨이 증가. (선생님 회원가입)  -->
	<update id="comTrue" parameterType="String"  >
		update company_member
			set com_lev = 3, com_approval = '승인', approval_date = sysdate
			where com_num = ${comNum}
	</update>
	
	<!-- 리스트에서 미승인을 클릭하면 삭제. (선생님 회원가입)  -->
	<delete id="comFalse" parameterType="String"  >
		delete from company_member
			where com_num = ${comNum}
	</delete>

	<!-- 회원이 휴양지 신청을 했을때 뽑히는 리스트 -->
	<select id="vspotList" parameterType="spageDTO" resultMap="baseVspotMember">
		
		select rownum rn, <include refid="vspotbasecolumn" />
		from(select rownum rn, <include refid="vspotbasecolumn" />
			from(select <include refid="vspotbasecolumn" />
				from vspot 
				order by VSPOT_DATE desc))
		where VSPOT_APPROVAL='미승인' and rn &gt;= #{startRow} and rn &lt;= #{endRow}
	
	</select>
	
	<!-- 승인 미승인 처리를 기다리는 휴양지 등록 개수 -->
	<select id="vspotListCount" parameterType="String" resultType="int">
		select count(*)
		from vspot
		where VSPOT_APPROVAL='미승인'
	</select>
	

	<!-- 리스트에서 승인을 클릭하면 승인으로 변경 (휴양지 등록)  -->
	<update id="vspotTrue" parameterType="String"  >
		update vspot
			set vspot_approval = '승인', approval_date = sysdate
			where vspot_num = ${vspotNum}
	</update>
	
	<!-- 리스트에서 미승인을 클릭하면 삭제(휴양지 등록)  -->
	<delete id="vspotFalse" parameterType="String"  >
		delete from vspot
			where vspot_num = ${vspotNum}
	</delete>
	
	<!-- 리스트에서 미승인을 눌렀을시 파일 삭제하기 위해서 ********* 디테일도 이거씁니다.***** -->
	<select id="FileDelete" parameterType="vDTO" resultMap="baseVspotMember">
		select <include refid="vspotbasecolumn" />
		from vspot
		where vspot_num = ${vspotNum}
	</select>
	
	
	
 	

	<!-- 관리자가 휴양지를 등록하는 것. -->
	<insert id="adminvspotInsert" parameterType="vDTO"> 
		insert into vspot(<include refid="vspotbasecolumn" />) values((select nvl(max(vspot_num)+1,1) from vspot), #{memNum}, #{memId}, #{vspotTitle}, #{vspotName}, #{vspotOriginal}, #{vspotStore}, #{vspotLocation} , #{vspotLocationMap}, #{vspotLoc}, #{vspotIntroduce}, #{vspotFeature}, '승인', null, sysdate)
	</insert>
	
	<!-- 사용자..가 상점을 등록하는 것. -->
	<insert id="shopInsert" parameterType="shopDTO"> 
		insert into shop(<include refid="shopbasecolumn" />) values((select nvl(max(shop_num)+1,1) from shop), #{vspotNum}, #{memId}, #{shopCategory}, #{shopLoc}, #{shopLocation}, #{shopLocationMap}, #{shopName}, #{goodsOriginal}, #{goodsStore}, #{goodsContext}, #{goodsIntro}, '미승인', #{shopClosed}, #{shopCount}, #{shopTime1}, #{shopTime2}, sysdate)
	</insert>
	
	
	<!-- 승인 미승인 처리를 기다리는 상점 리스트 -->
	<select id="list" parameterType="spageDTO" resultMap="shopbase">
	
		select rownum rn, <include refid="shopbasecolumn" />
		from(select rownum rn, <include refid="shopbasecolumn" />
			from(select <include refid="shopbasecolumn" />
				from shop
				order by GOODS_DATE desc))
		where SHOP_APPROVAL = '미승인' and  rn &gt;= #{startRow} and rn &lt;= #{endRow}
		
	</select>
	
	<!-- 승인 미승인 처리를 기다리는 상점 등록 개수 -->
	<select id="listmanaCount" parameterType="String" resultType="int">
		select count(*)
		from shop
		where SHOP_APPROVAL='미승인'
	</select>
	
	<!-- 리스트에서 승인을 클릭하면 승인으로 변경 (상점.)  -->
	<update id="listTrue" parameterType="String"  >
		update shop
			set SHOP_APPROVAL = '승인', GOODS_DATE = sysdate
			where SHOP_NUM = ${shopNum}
	</update>
	
	<!-- 리스트에서 미승인을 클릭하면 삭제(상점)  -->
	<delete id="listFalse" parameterType="String"  >
		delete from shop
			where SHOP_NUM = ${shopNum}
	</delete>
	
	<!-- 리스트에서 미승인을 눌렀을시 파일 삭제하기 위해서 **-->
	<select id="FileDelete2" parameterType="shopDTO" resultMap="shopbase">
		select <include refid="shopbasecolumn" />
		from shop
		where SHOP_NUM = ${shopNum}
	</select>
	
	
	<!-- 관리자가 상점 리스트에서 상세보기 하기 위해서. -->
	<select id="shopListDetail" parameterType="shopDTO" resultMap="shopbase">
		select <include refid="shopbasecolumn" />
		from shop
		where SHOP_NUM = ${shopNum}
	</select>
	
	<!-- 관리자가 상점을 등록하는 것. -->
	<insert id="adminshopInsert" parameterType="shopDTO"> 
		insert into shop(<include refid="shopbasecolumn" />) values((select nvl(max(shop_num)+1,1) from shop), #{vspotNum}, #{memId}, #{shopCategory}, #{shopLoc}, #{shopLocation}, #{shopLocationMap}, #{shopName}, #{goodsOriginal}, #{goodsStore}, #{goodsContext}, #{goodsIntro}, '승인', #{shopClosed}, #{shopCount}, #{shopTime1}, #{shopTime2}, sysdate)
	</insert>
	
	<select id="ActivityCount" parameterType="String" resultType="int">	<!-- 승인 미승인 처리를 기다리는 활동 등록 개수 -->
		select count(*)
		from ACTIVITY
		where activity_lev=1
	</select>
	
	 
	<update id="activityTrue" parameterType="String"  ><!-- 스트에서 승인을 클릭하면 승인으로 변경 (활동 등록) -->
		update activity
			set activity_lev = 2 where activity_num = ${activityNum}
	</update>
	
	<delete id="activityFalse" parameterType="String"  >	<!-- 미승인 삭제 -->
		delete from activity
			where activity_num = ${activityNum}
	</delete>
	
		<select id="actFileDelete" parameterType="actiDTO" resultMap="baseActivity">
		select <include refid="baseclumnOfActivity" />
		from activity
			where activity_num = ${activityNum}
	</select>
	
	
	
	
	
	
	
	
<!-- 활동 관리자 -->	
	<!-- 활동활동 -->
	<select id="activityListADMIN" parameterType="spageDTO" resultMap="baseActivity"> <!-- 1차 제출한 거 뽑기 -->
			select rownum rn, <include refid="baseclumnOfActivity" />
		from(select rownum rn, <include refid="baseclumnOfActivity" />
			from(select <include refid="baseclumnOfActivity" />
				from activity order by activity_start_date desc))
		where rn &gt;= #{startRow} and rn &lt;= #{endRow} and activity_lev = 1
	</select>
	

	<!-- 활동 상점&물품 등록 -->
	<insert id="activityStoreInsert" parameterType="StoreDTO">  <!-- 활동 상점 등록 -->
		insert into ACTIVITY_STORE(<include refid="actiStore" />)
			values((select nvl(max(store_num)+1,1) from activity_store), #{storeName}, #{storeLoc1},
					#{storeLoc2}, #{storeTel}, #{StoreMainProduct}, #{storeBusinessNum}, #{storeOwner},
					#{originalStoreFilename}, #{storeStoreFilename}, #{originalBusinessLicenseFilename},
					#{storeBusinessLicenseFilename}, sysdate)
	</insert>
	
	
	
	<!-- 상점 목록 -->
	<select id="activityStoreList" parameterType="StoreDTO" resultMap="baseStore">		
		select rownum rn, <include refid="actiStoreList" />
			from (select rownum rn, <include refid="actiStoreList" />
					 from(select <include refid="actiStoreList" />
						from ACTIVITY_STORE order by Store_loc1 desc))
	</select>
	
	<!-- 상점 수 -->
	<select id="ActiStoreCount" parameterType="String" resultType="int">	
		select count(*)
		from ACTIVITY_STORE
	</select>
	
	<!-- stNum찾기 -->
	<select id="prpr" parameterType="StoreDTO"  resultMap="baseStore">	
		select <include refid="actiStore" />
		from ACTIVITY_STORE
		where store_num = #{storeNum}
	</select>
	
	<!-- 활동 물품 등록 -->
	<insert id="activityProductInsert" parameterType="ProductDTO"> 
		insert into ACTIVITY_PRODUCT(<include refid="actiProduct" />)
			values((select nvl(max(product_num)+1,1) from ACTIVITY_PRODUCT), #{storeNum}, #{productName}, #{productPrice}, #{productOption},
			 #{productContent}, #{originalFilename}, #{storeFilename})
	</insert>
	
	<!-- 물품 등록시 무슨 상점? -->
	<select id="storeNameForInsertProduct" parameterType="StoreDTO" resultMap="baseStore">
		select store_name
			from ACTIVITY_STORE
			where store_num = #{storeNum}
	</select>

	<!-- 활동 상점 상세보기 -->
	<select id="storeDetail" parameterType="StoreDTO" resultMap="baseStore">		
		select <include refid="actiStore" />
			from ACTIVITY_STORE
			where store_num = #{storeNum}
	</select>
	
	<!-- 상점 상세보기 내에 있는 물품 -->
	<select id="productInStoreDetail" parameterType="ProductDTO" resultMap="baseProduct">
		select <include refid="actiProduct" />
			from ACTIVITY_PRODUCT
		where store_num = #{storeNum}
	</select>
	
	<!-- 상점리스트 회원 레벨 뽑기 -->
	<select id="storeDetailMemLev" parameterType="memDTO" resultMap="baseMember">
		 select mem_lev
		 	from MEMBER
		 	where mem_num = #{memNum}
	</select>
	
	
	
<!-- 상점 삭제 -->
	<delete id="deleteStore">
	 	delete from ACTIVITY_STORE where store_num = #{Num}
	</delete>
	<!-- 대여물품 삭제 -->
	<delete id="deleteProduct">
		delete from ACTIVITY_PRODUCT where store_num =#{Num}
	</delete>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>