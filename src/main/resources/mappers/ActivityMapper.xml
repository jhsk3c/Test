<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-/mybatis.org/DTO Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="actiMapper">

<cache />
	 <resultMap type="actiDTO" id="baseActivity">
		<id column="activity_num" jdbcType="VARCHAR" property="activityNum"/>
		<result column="product_num" jdbcType="VARCHAR" property="productNum"/>
		<result column="store_num" jdbcType = "VARCHAR" property="storeNum"/>
		<result column="mem_num" jdbcType="VARCHAR" property="memNum"/>
		<result column="activity_lev" jdbcType="INTEGER" property="activityLev"/>
		<result column="activity_name" jdbcType="VARCHAR" property="activityName"/>
		<result column="activity_start_date" jdbcType="TIMESTAMP" property="activityStartDate"/>
		<result column="activity_end_date" jdbcType="TIMESTAMP" property="activityEndDate"/>
		<result column="recruit_start_date" jdbcType="TIMESTAMP" property="recruitStartDate"/>
		<result column="recruit_end_date" jdbcType="TIMESTAMP" property="recruitEndDate"/>
		<result column="recruit_People" jdbcType="INTEGER" property="recruitPeople"/>
		<result column="activity_Current_People" jdbcType="INTEGER" property="activityCurrentPeople"/>
		<result column="activity_Product" jdbcType="VARCHAR" property="activityProduct"/>
		<result column="activity_state" jdbcType="VARCHAR" property="actiState"/>
		<result column="activity_text" jdbcType="VARCHAR" property="activityText"/>
		<result column="limit_age" jdbcType="VARCHAR" property="limitAge"/>
		<result column="acivity_cost" jdbcType="VARCHAR" property="activityCost"/>
		<result column="original_filename" jdbcType="VARCHAR" property="originalFilename"/>
		<result column="store_filename" jdbcType="VARCHAR" property="storeFilename"/>
		<result column="sort_of_activity" jdbcType="VARCHAR" property="sortOfActivity" />
		<result column="which_product" jdbcType="VARCHAR" property="whichProduct" />
		<result column="activity_city" jdbcType="VARCHAR" property="activityCity" />
	</resultMap> 
	
 	<sql id="basecolumnofActi"> 
		mem_num, activity_name, activity_num, activity_lev, activity_start_date, activity_end_date, 
			recruit_start_date, recruit_end_date, recruit_people, activity_text, 
			limit_age, original_filename, store_filename, activity_Product, acivity_cost, sort_of_activity, which_product, activity_city
	</sql>
	
	<sql id="insert1" >
			activity_num, mem_num, activity_name, activity_lev, activity_start_date, activity_end_date, 
			recruit_people, activity_text, limit_age, original_filename, store_filename, sort_of_activity, 
			which_product, activity_city
	</sql>
	<sql id="showInForm2">
		activity_num, mem_num, activity_name, activity_lev, activity_start_date, activity_end_date, 
			recruit_people, activity_text, limit_age, original_filename, store_filename, sort_of_activity, 
			which_product, activity_city	
	</sql>
	
	
	<!-- 상점 -->
	<resultMap type="StoreDTO" id="baseActiStore">
		<id column="store_num" jdbcType="VARCHAR" property="storeNum" />
		<result column="store_name	" jdbcType="VARCHAR" property="storeName" />
		<result column="store_loc1" jdbcType="VARCHAR" property="storeLoc1" />
		<result column="store_loc2" jdbcType="VARCHAR" property="storeLoc2" />		
		<result column="store_tel" jdbcType="VARCHAR" property="storeTel" />
		<result column="store_MainProduct" jdbcType="VARCHAR" property="StoreMainProduct" />
		<result column="store_business_num" jdbcType="VARCHAR" property="storeBusinessNum" />
		<result column="store_Owner" jdbcType="VARCHAR" property="storeOwner" />
	</resultMap>
	
	<sql id="StoreList" >
		store_num, store_name, store_loc1, store_loc2, store_tel,
		store_MainProduct, store_business_num, store_owner, original_Store_filename, 
		store_Store_filename, registration_date
	</sql>




<!-- sql 일반-->
	<!-- 활동등록 1,2차 -->
	<insert id="activityInsert1" parameterType="actiDTO">
		insert into 
			activity(<include refid="insert1" />) 
			values((select nvl(max(activity_num)+1,1) from activity), #{memNum}, #{activityName}, '1', 
			#{activityStartDate}, #{activityEndDate}, #{recruitPeople}, #{activityText}, #{limitAge},
			#{originalFilename}, #{storeFilename}, #{sortOfActivity}, #{whichProduct}, #{activityCity})
	</insert>
	
	<select id="prpr" parameterType="actiDTO" resultMap="baseActivity">
		select <include refid="insert1" />
		from ACTIVITY
		where mem_num = #{memNum}
	</select>
	
	<select id="whetherAvailability" parameterType="actiDTO" resultMap="baseActivity" >
		select <include refid="basecolumnofActi" />
			from ACTIVITY
			where mem_num = #{memNum}
	</select>
	
<!-- 2차 등록에 보여줄 정보 -->
	<select id="activityShowInfo" parameterType="actiDTO" resultMap="baseActivity">
		select <include refid="showInForm2" />
		from ACTIVITY
		where mem_num = #{memNum}
	</select>
	
	<update id="activityInsert2" parameterType="actiDTO" >
		update activity
			set activity_Product = #{activityProduct}, acivity_cost = #{activityCost}, activity_lev = 3,
			 recruit_start_date = #{recruitStartDate}, recruit_end_date = #{recruitEndDate}
			where mem_num = #{memNum} 
	</update>
	
	

	<!-- 활동목록 -->
	<select id="activityList" parameterType="actiDTO" resultMap="baseActivity" >
		select <include refid="basecolumnofActi"></include>
		from ACTIVITY		
			where activity_lev = 3
	</select>

<!-- GETMEMNUM -->
	<select id="forToCheck" parameterType="actiDTO" resultMap="baseActivity" >
		select activity_lev
		from ACTIVITY
		where mem_num = #{memNum}
	</select>
	
	<!-- 상세보기 -->
	<select id="activityDetail" parameterType="actiDTO" resultMap="baseActivity">
		select <include refid="basecolumnofActi" />
			from ACTIVITY
		where activity_num = #{activityNum}
	</select>
	
		
	
	<!-- 프로필 -->
	<select id="activityProfile"  parameterType="actiDTO" resultMap="baseActivity">
		select <include refid="basecolumnofActi" />
			from ACTIVITY
		where mem_num = #{memNum}
	</select>
	
	
	
<!--  /////////////////////////////////////- -->
	<!-- 상점 -->
	<select id="storeListforMember"  parameterType="storeDTO" resultMap="baseActiStore">
			select <include refid="StoreList" />
				from ACTIVITY_STORE
	</select>
	
	
	<select id="searchCity" parameterType="storeDTO" resultMap="baseActiStore">
		select <include refid="StoreList" />
		 from ACTIVITY_STORE
		 where store_loc1 = #{storeLoc1}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
<!-- 메인 리스트 -->
	<select id="ListOfActivity" parameterType="actiDTO" resultMap="baseActivity">
		select <include refid="basecolumnofActi" />
		from ACTIVITY
		where activity_lev = 3
	</select>
	
</mapper>